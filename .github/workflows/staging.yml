name: Deploy Staging to VM

on:
  push:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
        
      - name: Install dependencies
        run: npm install

      # Uncomment this if you want to run tests before deploying
      # - name: Run application tests
      #   run: npm run test:coverage
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker using GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ secrets.GHCR_USERNAME }}/budidayaplus_fe:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env: 
      API_BASE_URL: ${{ secrets.API_BASE_URL_STAGING }}

    steps:
      - name: SSH into VM and deploy
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            IMAGE_NAME=ghcr.io/${{ secrets.GHCR_USERNAME }}/budidayaplus_fe:latest
            echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
            docker pull $IMAGE_NAME
            docker stop budidayaplus_fe_staging || true
            docker rm budidayaplus_fe_staging || true
            docker run -d --name budidayaplus_fe_staging -p 3001:3000 \
              -e API_BASE_URL=${{ secrets.API_BASE_URL_STAGING }} \
              $IMAGE_NAME
